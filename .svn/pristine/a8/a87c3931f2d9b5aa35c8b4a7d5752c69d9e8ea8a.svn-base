/**
 *	全局变量  
 */
var conn 			  = null;
var currentUserId 	  = null;;
var currentChatUserId = null;
var currentChatType   = null;
var bothRosterArray   = [];
var roomArray         = [];
var chatDiv 		  = "chat01";
var chatTitleDivId    = "chatTitle";
var chatMessageDivId  = "chatMessage";
var sending 		  =  false;
var packageCounter    =  0;
var packagePrefix     =  ""; 

/**
 *	登录 
 */
var login = function login(){
	setTimeout(function () {
		var username = $("#username").val();
		var password = $("#password").val();
		if(username == ''  || password == ''){
			alert("请输入用户名和密码");
			return;
		}
		hideLogin();	   //隐藏登录界面
		showWaitModalUI(); //显示等待层
		var objectArgs = {httpbase: BACKEND_SERVER_HTTPBASE, timerval: BACKEND_SERVER_TIMERVAL};
		  if (BACKEND_SERVER_TYPE == 'binding'){
			  conn = new JSJaCHttpBindingConnection(objectArgs);
		  }else{
			  conn = new JSJaCHttpPollingConnection(objectArgs);  
		  }	
		  conn.registerHandler('iq', 'query', 'jabber:iq:roster','set', handleIq);
		  conn.registerHandler('iq', 'ping', 'urn:xmpp:ping', 'get',handlePing);
		  conn.registerHandler('presence',handlePresence);
		  conn.registerHandler('message',handleMessage);
		  conn.registerHandler('onregister',handleRegister);
		  conn.registerHandler('onconnect',handleConnected);
		  conn.registerHandler('onerror',handleConnError);		  
		  objectArgs = {register:false};
		  objectArgs.domain    =  SERVER_DOMAIN;
		  objectArgs.host      =  SERVER_HOST;
		  objectArgs.port  	   =  SERVER_PORT;
		  objectArgs.username  =  username;
		  objectArgs.pass	   =  password;
		  objectArgs.resource  =  DEFAULT_RESOURCE;
		  objectArgs.timerval  =  BACKEND_SERVER_TIMERVAL;
		  conn.connect(objectArgs);
	}, 50);
};

/**
 * 注册
 */
var regist = function regist(){
	var _username = $("#regist_username").val();
	var _password = $("#regist_password").val();
	var _confirm_password = $("#regist_confirm_password").val();
	if(_username == ''  || _password == '' || _confirm_password == ''){
		alert("请输入用户名和密码");
		return;
	}
	if(_password != _confirm_password){
		alert("两次输入密码不一致");
		return;
	}
	var objectArgs = {httpbase: BACKEND_SERVER_HTTPBASE, timerval: BACKEND_SERVER_TIMERVAL};
	  if (BACKEND_SERVER_TYPE == 'binding'){
		  conn = new JSJaCHttpBindingConnection(objectArgs);
	  }else{
		  conn = new JSJaCHttpPollingConnection(objectArgs);  
	  }
	  conn.registerHandler('iq', 'query', 'jabber:iq:roster','set', handleIq);
	  conn.registerHandler('iq', 'ping', 'urn:xmpp:ping', 'get',handlePing);
	  conn.registerHandler('presence',handlePresence);
	  conn.registerHandler('message',handleMessage);
	  conn.registerHandler('onregister',handleRegister);
	  conn.registerHandler('onconnect',handleConnected);
	  conn.registerHandler('onerror',handleConnError);
	  objectArgs  = {register:true};
	  objectArgs.domain    =  SERVER_DOMAIN;
	  objectArgs.host      =  SERVER_HOST;
	  objectArgs.port  	   =  SERVER_PORT;
	  objectArgs.resource  =  DEFAULT_RESOURCE;
	  objectArgs.username  =  _username;
	  objectArgs.pass	   =  _password;
	  conn.connect(objectArgs);
};

/**
 * 发送上线请求 
 */
var sendOnlinePresence = function senOnlinePresence(){
	var presence = new JSJaCPresence();
    conn.send(presence);
};

var sendJoinRoomPresence = function sendJoinRoomPresence(roomId,callBack){
	if(conn && conn.connected()){
		var presence = new JSJaCPresence();
		presence.setTo(roomId +"@"+DEFAULT_CONFERENCE_SERVER +'/'+currentUserId);
		presence.appendNode('x', {'xmlns': 'http://jabber.org/protocol/muc'});
		conn.send(presence,callBack);	
	}
};

/**
 * 登出
 */
var logout = function logout(){
	if(conn && conn.connected()){
		var presence = new JSJaCPresence();
		presence.setType('unavailable');
		conn.send(presence);
		conn.disconnect();
	}
	cleanPage();
	hiddenChatUI();
	showLogin();
};

/**
 * 处理好友Iq请求
 */
var handleIq = function handleIq(iq) {
	var _query = iq.getQuery();
	if(_query){
		var _items = _query.childNodes;
		if(_items){
			for(var i=0; i< _items.length; i++){
				var _jid = _items.item(i).getAttribute('jid');
				if (typeof(_jid) == 'undefined'){
				      continue;
				}
				var _userId 	  = _jid.split("@")[0];
				var _subscription = _items.item(i).getAttribute('subscription');
				if('both' == _subscription || 'from' == _subscription){
					//both表明双方互为好友,from我是对方的单向好友
					addRosterDiv(_userId);
				}
				if('remove' == _subscription){
		 			removeRosterDiv(_userId);
		 			$('#delFridentModal').modal('hide');
				}
			}
		}
	}
};

/**
 * 心跳
 */
var handlePing  = function handlePing(iq){
	if(conn && conn.connected()){
		var _iq  = new JSJaCIQ();
		_iq.setType('result');
		_iq.setTo(SERVER_DOMAIN);
		conn.send(_iq);	
	}
};

/**
 * 处理Presence
 */
var handlePresence = function handlePresence(presence) {
	 var _presenceType  = presence.getType();
	 var _jid  = new JSJaCJID(presence.getFrom());
	 switch (_presenceType){
	 	case 'subscribe':
	 		var _subscribeMessage = _jid.getNode() + "请求加你为好友。";
	 		var _status = presence.getStatus();
	 		if(_status){
	 			if(_status == '[resp:true]'){
	 				return;
	 			}
	 		}
	 		_subscribeMessage = _subscribeMessage +"<br><br> 验证信息:" + _status;
	 		showConfirmMessage(_subscribeMessage);
			$('#confirm-block-footer-confirmButton').click(function() {
				agreeAddFriend(_jid.getNode());
				$('#confirm-block-div-modal').modal('hide');
			});
			$('#confirm-block-footer-cancelButton').click(function() {
				rejectAddFriend(_jid.getNode());
				$('#confirm-block-div-modal').modal('hide');
			});
	 		break;
	 	case 'subscribed':
	 		//好友添加成功,成为对方的好友
	 		break;
	 	case 'unsubscribed':
	 		var _status = presence.getStatus();
	 		if(_status){
	 			if(_status == '[delete]'){
		 			removeRosterDiv(_jid.getNode());
		 		}
	 		}
	 		//删除或者拒绝好友服务器响应
	 		$('#delFridentModal').modal('hide');
	 		break;
		default:
	      	break;
	 }
};

/**
 * 注册成功
 */
var handleRegister = function handleRegister(iq){
	if(iq.getType() == 'result'){
		if(iq.getID() == 'reg1'){
			alert("注册成功");
			showLogin();
		}
	}
};

/**
 * 处理Message
 */
var handleMessage = function handleMessage(message) {
	if(message.getType() == 'error'){
		return;
	}else{
		var _body = message.getBody();
		var _type = message.getType();
		if(_body != null){
			var _requestElement = message.getChild("request","urn:xmpp:receipts");
			var _ackedElement 	= message.getChild("acked","urn:xmpp:receipts");
			if(_requestElement != null || _ackedElement != null){
				sendReceivedMessage(message);
			}
			try{
				var _json  		= eval("("+_body+")");
				var _bodies 	= _json.bodies[0],
					_fromUserId = _json["from"],
					_toUserId   = _json["to"],
					_msgtype   	= _bodies["type"],
					_msg    	= _bodies["msg"];
				switch (_msgtype) {
					case "img":
						appendMessage(_fromUserId, _toUserId, "[图片]",_type);
						break;
					case "loc":
						appendMessage(_fromUserId, _toUserId, "[位置]",_type);
						break;
					case "audio":
						appendMessage(_fromUserId, _toUserId, "[语音消息]",_type);
						break;
					case "video":
						appendMessage(_fromUserId, _toUserId, "[视频消息]",_type);
						break;
					case "file":
						appendMessage(_fromUserId, _toUserId, "[文件]",_type);
						break;
					case "richtxt":
						appendMessage(_fromUserId, _toUserId, "[资讯消息]",_type);
						break;
					case "templatetxt":
						appendMessage(_fromUserId, _toUserId, "[模板消息]",_type);
						break;
					case "audio_chat":
						appendMessage(_fromUserId, _toUserId, "[语音聊天]",_type);
						break;
					case "video_chat":
						appendMessage(_fromUserId, _toUserId, "[视频聊天]",_type);
						break;
					default:
						appendMessage(_fromUserId, _toUserId, _msg,_type);
						break;
				}
			}catch (e) {
				//ignore 不是有效的JSON格式
			}
		}
	}
};

/**
 * 发送文本消息
 */
var sendTextMessage = function sendTextMessage() {
	if(sending){
		return;
	}
	sending   = true;
	var _msg  = document.getElementById(chatMessageDivId);		
	var _msgValue = _msg.value;
	if (_msgValue == null || _msgValue.length == 0) {
		sending = false;
		return;
	}
	var _toUserId = currentChatUserId;
	if (_toUserId == null){
		sending = false;
		return;
	}
	var _message = new JSJaCMessage();
	_message.setID(getUniqueId());
	_message.setType(currentChatType||"chat");
	_message.setTo(_toUserId +'@'+ SERVER_DOMAIN);
	if("groupchat" == currentChatType){
		_message.setTo(_toUserId +'@'+ DEFAULT_CONFERENCE_SERVER);	
	}
	var _json = {
	        from : currentUserId,
	        to 	 : _toUserId,
	        bodies : [{
	            type : "txt",
	            msg  : _msgValue
	        }],
	        ext  :  {}
	    };
	_message.setBody(JSON.stringify(_json));
	_message.appendNode('request',{
		xmlns : 'urn:xmpp:receipts',
	});
	conn.send(_message);
	appendMessage(currentUserId, _toUserId, _msgValue);
	/*隐藏表情并清除输入框中相关信息*/
	hideEmotionDiv();
	_msg.value = "";
	_msg.focus();
	setTimeout(function() {
		sending = false;
	}, 1000);
};

/**
 * 发现消息回执
 */
var sendReceivedMessage = function(_message){
	var _receivedMessage = new JSJaCMessage();
	_receivedMessage.setTo(SERVER_DOMAIN);
	_receivedMessage.setType(_message.getType());
	_receivedMessage.appendNode('received', {
			xmlns : 'urn:xmpp:receipts',
			id 	  : _message.getID(),
	});
	conn.send(_receivedMessage);
};

/**
 * 登录成功
 */
var handleConnected = function handleConnected(){
	hiddenWaitModalUI();
	currentUserId = conn.username;
	//查询好友
	queryRoster(function(iq){
		var _query = iq.getQuery();
		if(_query){
			var _items = _query.childNodes;
			if(_items){
				for(var i=0; i< _items.length; i++){
					var _jid = _items.item(i).getAttribute('jid');
					if (typeof(_jid) == 'undefined'){
					      continue;
					}
					var _userId 	  = _jid.split("@")[0];
					var _subscription = _items.item(i).getAttribute('subscription');
					if('both' == _subscription || 'from' == _subscription){
						//both表明双方互为好友,from我是对方的单向好友
						bothRosterArray.push(_userId);
					}
					if('none' == _subscription){
						//none类型发送remove请求,避免下次收到相关推送
						var _iq2 	= new JSJaCIQ();
						_iq2.setType('set');
						var _query2 = _iq2.setQuery('jabber:iq:roster');
						var _item2  = _query2.appendChild(_iq2.getDoc().createElement('item'));
						_item2.setAttribute('jid',_userId + "@" + SERVER_DOMAIN);
						_item2.setAttribute('subscription','remove');
						conn.send(_iq2);
					}
				}
			}
		}
		if(bothRosterArray!= null && bothRosterArray.length > 0){
			buildRosterDiv(bothRosterArray,'contactlistUL');
			//隐藏默认文本输入框的显示
			$('#null-nouser').css({
				"display" : "none"
			});
			//设置第一个联系人为默认联系人
			setRosterChat(bothRosterArray[0]);
		}
		//查询联系人
		queryGroup(function(iq){
			var _query = iq.getQuery();
			if(_query){
				var _items = _query.childNodes;
				if(_items){
					for(var i=0; i< _items.length; i++){
						var _jid = _items.item(i).getAttribute('jid');
						if (typeof(_jid) == 'undefined'){
						      continue;
						}
						var _name =  _items.item(i).getAttribute('name');
						var _room = {
			                        jid		: _jid, 
			                        roomId	: _jid.split("@")[0],
			                        roomName: _name
			                    };
						roomArray.push(_room);
					}
				}
			}
			if(roomArray != null && roomArray.length > 0){
				buildGroupDiv(roomArray, 'grouplistUL');
			}
			sendOnlinePresence();//设置用户上线状态
		});
	});
	showChatModalUI();
};

/**
 *	登录失败 
 */
var handleConnError = function handleConnError(error) {
	  var _errorCode  = error.getAttribute('code');
	  var _errorType  = error.getAttribute('type');
	  switch (_errorCode){
	  	case '401':
	  		alert("用户名或密码错误");
	  		hiddenWaitModalUI();
	  		showLogin();
	  		break;
	  	case '409':
	  		alert("注册失败,用户名已存在！");
	  		break;
	  	case '503':
	  		alert("服务不可用");
	  		logout();
	  		break;
	  	case '500':
	  		if (!conn.connected()){
	  			if (confirm("服务器内部错误！\n\n连接断开！\n重新连接吗？")){
	  				//TODO  系统重连
	  			}else{
	  				logout();
	  			}
	  		}
	  		break;
	  	default:
	  		alert("An Error Occured:\nCode: "+_errorCode+"\nType: "+_errorType+"\nCondition: "+error.firstChild.nodeName);
	      	break;
	  }
};

/**
 * 查询好友列表
 */
var queryRoster = function(callBack){
	var iq = new JSJaCIQ();
	iq.setIQ(null,'get','roster_1');
	iq.setQuery(NS_ROSTER);
	conn.send(iq,callBack);
};

/**
 * 查询已加入的群组 
 */
var queryGroup = function(callBack){
	var iq = new JSJaCIQ();
	iq.setIQ(DEFAULT_CONFERENCE_SERVER,'get','disco_item_1');
	iq.setQuery(NS_DISCO_ITEMS);
	conn.send(iq,callBack);
};

/**
 * 添加好友
 */
var addFriend = function(){
	var _friendId = $('#addFridentId').val();
	if (_friendId == '') {
		$('#add-frident-warning').html("<font color='#FF0000'>请输入好友名称</font>");
		return;
	}
	if(validateUserIsFriend(_friendId)){
		$('#add-frident-warning').html("<font color='#FF0000'>对方已是您的好友了</font>");
		return;		
	}
	var _presence = new JSJaCPresence();
	_presence.setType('subscribe');
	_presence.setTo(_friendId +"@"+ SERVER_DOMAIN);
	_presence.setStatus("加个好友呗");
	conn.send(_presence);
	$('#addFridentModal').modal('hide');
	return;
};

/**
 * 删除好友
 */
var delFriend = function(){
	var _friendId = $('#delFridentId').val();
	if (_friendId == '') {
		$('#del-frident-warning').html("<font color='#FF0000'>请输入好友名称</font>");
		return;
	}
	if(!validateUserIsFriend(_friendId)){
		$('#del-frident-warning').html("<font color='#FF0000'>该用户不是你的好友!</font>");
		return;
	}
	
	/*删除好友*/
	var _iq = new JSJaCIQ();
	_iq.setType('set');
	var _query = _iq.setQuery('jabber:iq:roster');
	var _item  = _query.appendChild(_iq.getDoc().createElement('item'));
	_item.setAttribute('jid',_friendId + "@" + SERVER_DOMAIN);
	_item.setAttribute('subscription','remove');
	conn.send(_iq);
	
	/*删除好友通知*/
	var _presence = new JSJaCPresence();
	_presence.setType('unsubscribed');
	_presence.setTo(_friendId +"@"+ SERVER_DOMAIN);
	_presence.setStatus("[delete]");
	conn.send(_presence);
};


/**
 * 同意添加好友
 */
var agreeAddFriend = function(friendId) {
	var _subscribedPresence = new JSJaCPresence();
	_subscribedPresence.setType('subscribed');
	_subscribedPresence.setTo(friendId +"@"+ SERVER_DOMAIN);
	conn.send(_subscribedPresence);//发送同意申请
	
	var _subscribePresence = new JSJaCPresence();
	_subscribePresence.setType('subscribe');
	_subscribePresence.setTo(friendId +"@"+ SERVER_DOMAIN);
	_subscribePresence.setStatus("[resp:true]");
	conn.send(_subscribePresence); //发送自动加好友申请
};

/**
 * 拒绝添加好友
 */
var rejectAddFriend = function(friendId) {
	var _unsubscribedPresence = new JSJaCPresence();
	_unsubscribedPresence.setType('unsubscribed');
	_unsubscribedPresence.setTo(friendId +"@"+ SERVER_DOMAIN);
	conn.send(_unsubscribedPresence);
};

/**
 * 根据用户ID判断用户是否是好友
 */
var validateUserIsFriend = function(userId) {
	if(bothRosterArray){
		for (var i = 0; i < bothRosterArray.length; i++) {
			if (bothRosterArray[i] == userId) {
				return true;
			}
		}	
	}
	return false;
};

/**
 * 从好友列表删除好友
 */
var  removeRosterDiv = function(friendId){
	if(validateUserIsFriend(friendId)){
		bothRosterArray.remove(friendId);
		//删除好友列表
		var _li  = getChatLi(friendId);
		if(_li){
			_li.remove();
		}
		
		//删除好友对话框
		var _div = getChatDiv(friendId);
		if(_div){
			_div.remove();
		}
		if(currentChatUserId == friendId){
			if(bothRosterArray.length > 0){
				//设置第一个联系人为默认联系人
				setRosterChat(bothRosterArray[0]);	
			}else{
				//没有好友了,恢复默认
				currentChatUserId = "";
				currentChatType   = "";
				document.getElementById(chatTitleDivId).children[0].innerHTML = "";
				$('#null-nouser').css({
					"display" : "block"
				});
			}
		}
	}
};

/**
 * 向好友列表中添加好友
 */
var  addRosterDiv = function(friendId){
	if(!validateUserIsFriend(friendId)){
		bothRosterArray.push(friendId);
		//增加用户至好友列表
		var _li  = getChatLi(friendId);
		if(!_li){			
			_li = $('<li>').attr({
	 			'id'   : 'chat_'+friendId,
	 			'type' : 'chat'
			}).click(function() {
				chooseContactChat(this);
			});
			_li.css("margin","5px"); 
			$('<img>').attr("src", "front/img/head/default_friend.png")
				  .attr("width","35")
				  .attr("height","35").appendTo(_li);
			$('<span>').css("margin-left","10px").html(friendId).appendTo(_li);
			$('#contactlistUL').append(_li);
			
			//如果以前没有好友第一次添加,设置为默认联系人
			if(bothRosterArray.length == 1){
				$('#null-nouser').css({
					"display" : "none"
				});
				setRosterChat(bothRosterArray[0]);	
			}
		}
	}
};

/**
 * 构造花名册列表
 */
var buildRosterDiv = function buildRosterDiv(rosterArray,divId) {
	 $('#'+divId).html("");
	 for(var i=0; i<rosterArray.length;i++){
		var _li = $('<li>').attr({
			 			'id'   : 'chat_'+rosterArray[i],
			 			'type' : 'chat'
		 		}).click(function() {
		 			chooseContactChat(this);
		 		});
		_li.css("margin","5px"); 
		$('<img>').attr("src", "front/img/head/default_friend.png")
				  .attr("width","35")
				  .attr("height","35").appendTo(_li);
		$('<span>').css("margin-left","10px").html(rosterArray[i]).appendTo(_li);
		$('#'+divId).append(_li);
	 }
};

/**
 * 构造花名册列表
 */
var buildGroupDiv = function buildGroupDiv(groupArray,divId) {
	 $('#'+divId).html("");
	 for(var i=0; i<groupArray.length;i++){
		var _li = $('<li>').attr({
			 			'id'   : 'groupchat_'+groupArray[i].roomId,
			 			'type' : 'groupchat',
			 	 'displayname' :  groupArray[i].roomName,
			 		  'joined' : 'false'
		 		}).click(function() {
		 			chooseContactChat(this);
		 		});
		_li.css("margin","5px"); 
		$('<img>').attr("src", "front/img/head/default_group.png")
				  .attr("width","35")
				  .attr("height","35").appendTo(_li);
		$('<span>').css("margin-left","10px").html(groupArray[i].roomName).appendTo(_li);
		$('#'+divId).append(_li);
	 }
};

/**
 * 选择好友聊天
 */
var chooseContactChat = function chooseContactChat(li){
	var _chatType   = $(li).attr("type");
	var _chatUserId = "";
	if("groupchat" == _chatType){
		_chatUserId = li.id.substring("groupchat".length + 1);
	}else{
		_chatUserId = li.id.substring("chat".length + 1);
	}
	if(currentChatUserId == null || currentChatUserId.length <=0){
		//隐藏默认文本输入框的显示
		$('#null-nouser').css({
			"display" : "none"
		});
	}
	if(_chatUserId != currentChatUserId){
		if(currentChatUserId == null){
			showChatDiv(_chatUserId,_chatType);
		}else{
			showChatDiv(_chatUserId,_chatType);
			hideChatDiv(currentChatUserId,currentChatType);
		}
		currentChatUserId = _chatUserId;
		currentChatType   = _chatType;
	}
};


/**
 * 设置聊天好友
 */
var setRosterChat = function setRosterChat(chatUserId){
	if(chatUserId != currentChatUserId){
		if(currentChatUserId == null){
			showChatDiv(chatUserId);
		}else{
			showChatDiv(chatUserId);
			hideChatDiv(currentChatUserId);
		}
		currentChatUserId = chatUserId;
		currentChatType   = "chat";
	}
};

/**
 * 注册页面-点击返回按钮 
 */
var showLogin = function showLogin() {
	$('#im-div-regeist').modal('hide');
	$('#im-div-login').modal('toggle');
};

/**
 * 登录页面-点击注册按钮
 */
var showRegist = function showRegist() {
	$('#im-div-login').modal('hide');
	$('#im-div-regeist').modal('toggle');
};

/**
 * 隐藏登录界面
 */
var hideLogin = function hideLogin(){
	$('#im-div-login').modal('hide');
};

/**
 * 显示等待层
 */
var showWaitModalUI = function () {
	$('#waitmodal').modal('show');
};

/**
 * 隐藏等待层
 */
var hiddenWaitModalUI = function () {
	$('#waitmodal').modal('hide');
};

/**
 * 显示聊天界面
 */
var showChatModalUI = function () {
	$('#content').css({
		"display" : "block"
	});
	var login_user = document.getElementById("login_user");
	login_user.innerHTML = currentUserId;
};

/**
 * 隐藏聊天界面
 */
var hiddenChatUI = function () {
	$('#content').css({
		"display" : "none"
	});
};

/**
 * 显示聊天界面
 * 选择联系人之后：修改联系人背景色,创建对话框
 */
var showChatDiv = function(chatUserId,chatType){
	var _chatDiv = getChatDiv(chatUserId);
	if (_chatDiv == null) {
		_chatDiv = createChatDiv(chatUserId);
		document.getElementById(chatDiv).appendChild(_chatDiv);
	}
	_chatDiv.style.display = "block";
	var _li = null;
	if(chatType  && "groupchat" == chatType){
		_li = document.getElementById('groupchat_' + chatUserId);
		if (_li == null) {
			return;
		}
		if("groupchat" == $(_li).attr("type") && 'true' != $(_li).attr("joined")){
			sendJoinRoomPresence(chatUserId,function(){
				$(_li).attr("joined", "true");
			});
		}
	}else{
		_li = document.getElementById('chat_' + chatUserId);
		if (_li == null) {
			return;
		}
	}
	_li.style.backgroundColor = "#33CCFF";
	/*清除未读消息*/
	var _span = $(_li).children(".badge");
	if (_span && _span.length > 0) {
		_li.removeChild(_li.children[2]);
	}
	//点击有未读消息对象时对未读消息提醒的处理
	var _badgeGroup = $(_li).parent().parent().parent().find(".badge");
	if (_badgeGroup && _badgeGroup.length == 0) {
		$(_li).parent().parent().parent().prev().children().children().remove();
	}
	var _chatTitle  = "";//聊天窗口显示当前对话人名称
	if("groupchat" == chatType){
		_chatTitle =  "与群组" + $(_li).attr('displayname') + "聊天中";
	}else{
		_chatTitle 	= "与" + chatUserId + "聊天中";	
	}
	document.getElementById(chatTitleDivId).children[0].innerHTML = _chatTitle;
};

/**
 * 隐藏聊天界面
 */
var hideChatDiv = function(chatUserId,chatType){
	var _li = null;
	if(chatType  && "groupchat" == chatType){
		_li = document.getElementById('groupchat_' + chatUserId);	
	}else{
		_li = document.getElementById('chat_' + chatUserId);
	}
	if (_li) {
		_li.style.backgroundColor = "";
	}
	var _chatDiv = getChatDiv(chatUserId);
	if (_chatDiv) {
		_chatDiv.style.display = "none";
	}
};

/**
 * 查询好友Li
 */
var getChatLi = function(chatUserId,chatType) {
	if(chatType && "groupchat" == chatType){
		return document.getElementById("groupchat_" + chatUserId);
	}else{
		return document.getElementById("chat_" + chatUserId);	
	}
};

/**
 * 查询聊天Div
 */
var getChatDiv = function(chatUserId) {
	return document.getElementById(currentUserId + "-" + chatUserId);
};

/**
 * 如果与当前联系人没有聊天窗口Div就创建一个
 */
var createChatDiv = function(chatUserId) {
	var _chatDivId = currentUserId + "-" + chatUserId;
	var _chatDiv   = document.createElement("div");
	$(_chatDiv).attr({
		"id" 		: _chatDivId,
		"class" 	: "chat01_content",
		"className" : "chat01_content",
		"style"	 	: "display:none"
	});
	return _chatDiv;
};


/**
 * 聊天记录展示
 * @param fromUserId 发送人
 * @param toUserId	 接收人
 * @param msg		 消息
 * @param chatType	 消息类型
 */
var appendMessage = function(fromUserId, toUserId, msg, chatType){
	if(currentUserId == fromUserId){
		//发送消息
		var _div = $("<div>" +
						"<p1>" + fromUserId + "&nbsp;&nbsp;</p1>" +
						"<p2>" + getLoacalTimeString() + "<br/></p2>" +
					"</div>");
		var _message = $("<p3>" + formatEmotion(msg) + "</p3>");
			_message.attr("class", "chat-content-p3");
			_message.attr("className", "chat-content-p3");
		_div.append(_message);
		_div.css("text-align","right");
		
		var _chatDiv = getChatDiv(toUserId);
		if(_chatDiv == null){
			_chatDiv = createChatDiv(toUserId);
			document.getElementById(chatDiv).appendChild(_chatDiv);
		}
		$('#'+currentUserId + "-" + toUserId).append(_div);
		$('#'+currentUserId + "-" + toUserId).scrollTop($('#'+currentUserId + "-" + toUserId)[0].scrollHeight);
	}else{
		//接收消息
		var _div = $("<div>" +
						"<p1>" + fromUserId + "&nbsp;&nbsp;</p1>" +
						"<p2>" + getLoacalTimeString() + "<br/></p2>" +
					"</div>");
		var _message = $("<p3>" + formatEmotion(msg) + "</p3>");
			_message.attr("class", "chat-content-p3");
			_message.attr("className", "chat-content-p3");
		_div.append(_message);
		_div.css("text-align","left");
		
		//收到消息
		if(chatType && "groupchat" == chatType){
			fromUserId = toUserId;
		}
		var _li = getChatLi(fromUserId,chatType);
		if(_li == null){
			/*TODO-陌生人*/
		}
		_div.css("text-align","left");
		
		//如果非当前聊天用户,收到信息增加未读消息条数显示
		if(currentChatUserId != fromUserId){
			_li.style.backgroundColor = "green";
			var _span = $(_li).children(".badge");
			if (_span && _span.length > 0) {
				var _badge  = _span.text();
				var _number = new Number(_badge);
				_number++;
				_span.text(_number);
			}else {
				$(_li).append('<span class="badge">1</span>');
			}
			//增加不同分组消息提醒
			var _badgeGroup = $(_li).parent().parent().parent().prev().children().children(".badgegroup");
			if (_badgeGroup && _badgeGroup.length == 0) {
				$(_li).parent().parent().parent().prev().children().append('<span class="badgegroup">New</span>');
			}
		}
		var _chatDiv = getChatDiv(fromUserId);
		if(_chatDiv == null){
			_chatDiv = createChatDiv(fromUserId);
			document.getElementById(chatDiv).appendChild(_chatDiv);
		}
		$('#'+currentUserId + "-" + fromUserId).append(_div);
		$('#'+currentUserId + "-" + fromUserId).scrollTop($('#'+currentUserId + "-" + fromUserId)[0].scrollHeight);
	}
};

/**
 * 显示添加好友界面
 */
var showAddFriend = function() {
	$('#addFridentModal').modal('toggle');
	$('#addFridentId').val('好友账号');//输入好友账号
	$('#add-frident-warning').html("");
};

/**
 * 显示删除好友界面
 */
var showDelFriend = function() {
	$('#delFridentModal').modal('toggle');
	$('#delFridentId').val('好友账号');//输入好友账号
	$('#del-frident-warning').html("");
};

/**
 * 清除输入框内容
 */
var clearInputValue = function(inputId) {
	$('#' + inputId).val('');
};
/**
 * 清空聊天记录
 */
var cleanChatLog = function(){
	if (confirm("确定要清楚聊天记录?")) {
		var _div = getChatDiv(currentChatUserId) || createChatDiv(currentChatUserId);
		_div.innerHTML = "";	
	}
};

//消息通知操作时条用的方法
var showConfirmMessage = function(message) {
	$('#confirm-block-div-modal').modal('toggle');
	$('#confirm-block-footer-body').html(message);
};

/**
 * 清理页面临时缓存
 */
var cleanPage = function (){
	//重新初始化全局变量
	conn 		  	  = null;
	currentUserId 	  = null;;
	currentChatUserId = null;
	currentChatType   = null;
	bothRosterArray   = [];
	roomArray         = [];
	sending 		  = false;
	packageCounter    = 0;
	packagePrefix     = "";
	
	//清除右侧聊天对话框
	document.getElementById(chatTitleDivId).children[0].innerHTML = "";
	var _messageRoot 	 = document.getElementById(chatDiv);
	var _messageChildren = _messageRoot.children;
	for (var i = _messageChildren.length - 1; i > 1; i--) {
		_messageRoot.removeChild(_messageChildren[i]);
	}
	$('#null-nouser').css({
		"display" : "block"
	});
};

/**
 * 显示常用表情界面
 */
var emotionFlag    = false;
var showEmotionDiv = function showEmotionDiv() {
	if (emotionFlag) {
		$('#chat_emotion_div').css({
			"display" : "block"
		});
		return;
	}
	emotionFlag = true;
	for(var i = 0 ; i < IM_EMOTIONS.length; i++){
		var emotions = $('<img>').attr({
			"id" 	:  IM_EMOTIONS[i].id,
			"src"	:  IM_EMOTIONS[i].url,
			"title"	:  IM_EMOTIONS[i].title,
			"style" :  "cursor:pointer"
		}).click(function() {
			selectEmotion(this);
		});
		$('<li>').append(emotions).appendTo($('#emotion_ul'));
	}
	$('#chat_emotion_div').css({
		"display" : "block"
	});
};

/**
 * 	字符串转表情
 */
var formatEmotion = function formatEmotion(str){
	for(var i = 0 ; i < IM_EMOTIONS.length; i++){
		if(str.indexOf(IM_EMOTIONS[i].id) >= 0){
			str = str.replaceAll(IM_EMOTIONS[i].id, '<p3><img src="'+IM_EMOTIONS[i].url+'" width="22px" height="22px"/></p3>');
		}
	}
	return str;
};

/**
 * 选择表情
 */
var selectEmotion  = function selectEmotion(li){
	var _textarea   = document.getElementById(chatMessageDivId);
	_textarea.value = _textarea.value + li.id;
	_textarea.focus();
};

/**
 * 隐藏常用表情界面
 */
var hideEmotionDiv = function hideEmotionDiv() {
	$("#chat_emotion_div").fadeOut("slow");
};

/**
 * 聊天表情
 */
var IM_EMOTIONS = [
   {"id":"[@emoji_1.gif]","title":"偷笑","url":"front/img/emoticons/emoji_1.png"},
   {"id":"[@emoji_2.gif]","title":"白眼","url":"front/img/emoticons/emoji_2.png"},
   {"id":"[@emoji_3.gif]","title":"握手","url":"front/img/emoticons/emoji_3.png"},
   {"id":"[@emoji_4.gif]","title":"西瓜","url":"front/img/emoticons/emoji_4.png"},
   {"id":"[@emoji_5.gif]","title":"衰","url":"front/img/emoticons/emoji_5.png"},
   {"id":"[@emoji_6.gif]","title":"眨眼","url":"front/img/emoticons/emoji_6.png"},
   {"id":"[@emoji_7.gif]","title":"流泪","url":"front/img/emoticons/emoji_7.png"},
   {"id":"[@emoji_8.gif]","title":"夜晚","url":"front/img/emoticons/emoji_8.png"},
   {"id":"[@emoji_9.gif]","title":"赞","url":"front/img/emoticons/emoji_9.png"},
   {"id":"[@emoji_10.gif]","title":"得意","url":"front/img/emoticons/emoji_10.png"},
   {"id":"[@emoji_11.gif]","title":"再见","url":"front/img/emoticons/emoji_11.png"},
   {"id":"[@emoji_12.gif]","title":"汗","url":"front/img/emoticons/emoji_12.png"},
   {"id":"[@emoji_13.gif]","title":"惊讶","url":"front/img/emoticons/emoji_13.png"},
   {"id":"[@emoji_14.gif]","title":"吃饭","url":"front/img/emoticons/emoji_14.png"},
   {"id":"[@emoji_15.gif]","title":"奋斗","url":"front/img/emoticons/emoji_15.png"},
   {"id":"[@emoji_16.gif]","title":"饿了","url":"front/img/emoticons/emoji_16.png"},
   {"id":"[@emoji_17.gif]","title":"胜利","url":"front/img/emoticons/emoji_17.png"},
   {"id":"[@emoji_18.gif]","title":"哈欠","url":"front/img/emoticons/emoji_18.png"},
   {"id":"[@emoji_19.gif]","title":"睡着","url":"front/img/emoticons/emoji_19.png"},
   {"id":"[@emoji_20.gif]","title":"右哼哼","url":"front/img/emoticons/emoji_20.png"},
   {"id":"[@emoji_21.gif]","title":"害羞","url":"front/img/emoticons/emoji_21.png"},
   {"id":"[@emoji_22.gif]","title":"鄙视","url":"front/img/emoticons/emoji_22.png"},
   {"id":"[@emoji_23.gif]","title":"疑问","url":"front/img/emoticons/emoji_23.png"},
   {"id":"[@emoji_24.gif]","title":"委屈","url":"front/img/emoticons/emoji_24.png"},
   {"id":"[@emoji_25.gif]","title":"咖啡","url":"front/img/emoticons/emoji_25.png"},
   {"id":"[@emoji_26.gif]","title":"鲜花","url":"front/img/emoticons/emoji_26.png"},
   {"id":"[@emoji_27.gif]","title":"啤酒","url":"front/img/emoticons/emoji_27.png"},
   {"id":"[@emoji_28.gif]","title":"亲亲","url":"front/img/emoticons/emoji_28.png"},
   {"id":"[@emoji_29.gif]","title":"可爱","url":"front/img/emoticons/emoji_29.png"},
   {"id":"[@emoji_30.gif]", "title":"抓狂","url":"front/img/emoticons/emoji_30.png"},
   {"id":"[@emoji_31.gif]","title":"左哼哼","url":"front/img/emoticons/emoji_31.png"},
   {"id":"[@emoji_32.gif]","title":"顽皮","url":"front/img/emoticons/emoji_32.png"},
   {"id":"[@emoji_33.gif]","title":"鼓掌","url":"front/img/emoticons/emoji_33.png"},
   {"id":"[@emoji_34.gif]","title":"微笑","url":"front/img/emoticons/emoji_34.png"},
   {"id":"[@emoji_35.gif]","title":"心","url":"front/img/emoticons/emoji_35.png"},
   {"id":"[@emoji_36.gif]","title":"傻乐","url":"front/img/emoticons/emoji_36.png"},
   {"id":"[@emoji_37.gif]","title":"吓","url":"front/img/emoticons/emoji_37.png"},
   {"id":"[@emoji_38.gif]","title":"抱拳","url":"front/img/emoticons/emoji_38.png"},
   {"id":"[@emoji_39.gif]","title":"坏笑","url":"front/img/emoticons/emoji_39.png"},
   {"id":"[@emoji_40.gif]","title":"乐呵","url":"front/img/emoticons/emoji_40.png"},
   {"id":"[@emoji_41.gif]","title":"rock","url":"front/img/emoticons/emoji_41.png"},
   {"id":"[@emoji_42.gif]","title":"色","url":"front/img/emoticons/emoji_42.png"},
   {"id":"[@emoji_43.gif]","title":"加油","url":"front/img/emoticons/emoji_43.png"},
   {"id":"[@emoji_44.gif]","title":"可怜","url":"front/img/emoticons/emoji_44.png"},
   {"id":"[@emoji_45.gif]","title":"哈哈","url":"front/img/emoticons/emoji_45.png"},
   {"id":"[@emoji_46.gif]","title":"闭嘴","url":"front/img/emoticons/emoji_46.png"},
   {"id":"[@emoji_47.gif]","title":"高傲","url":"front/img/emoticons/emoji_47.png"},
   {"id":"[@emoji_48.gif]","title":"飞吻","url":"front/img/emoticons/emoji_48.png"},
   {"id":"[@emoji_49.gif]","title":"OK","url":"front/img/emoticons/emoji_49.png"},
   {"id":"[@emoji_50.gif]","title":"礼物","url":"front/img/emoticons/emoji_50.png"}
];

/**
 * 获取本地时间
 */
var getLoacalTimeString = function getLoacalTimeString() {
	var _date  	  = new Date();
	var _hours 	  = _date.getHours();
	var _minutes  = _date.getMinutes();
	var _seconds  = _date.getSeconds();
	if(_hours <= 9){
		_hours = "0" + _hours;
	}
	if(_minutes <= 9){
		_minutes = "0" + _minutes;
	}
	if(_seconds <= 9){
		_seconds = "0" + _seconds;
	}
	return _hours + ":" + _minutes + ":" + _seconds;
};

/**
 * 获取唯一消息ID
 */
var getUniqueId = function getUniqueId(){
	var date   = new Date();
	var hexStr = parseInt(date.getTime()).toString(16);
	return getPackagePrefix() + "3" + hexStr + getNextPackageCounter();
};

/**
 * 获取下一个计数器ID
 */
var getNextPackageCounter = function getNextPackageCounter(){
	if(packageCounter.toString().length < 4){
		packageCounter ++;
		return (Array(4).join(0) + packageCounter).slice(-4);
	}else{
		if(packageCounter > 9999){
			packageCounter = 0;
			return getNextPackageCounter();
		}
		return packageCounter;
	}
};

/**
 * 获取Package前缀
 */
var getPackagePrefix = function getPackagePrefix(){
	var charArray = ["0","1","2","3","4","5","6","7","8","9", "a","b","c","d","e","f","g","h",
	                 "i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z",
	                 "0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H",
	                 "I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];
	if(packagePrefix == null || packagePrefix.length < 5){
		for(var i= 0; i < 5; i++){
			packagePrefix += charArray[Math.floor(Math.random()*(charArray.length)) +1];
		}
		return packagePrefix;
	}
	return packagePrefix;
};

$(function(){
	//定义消息编辑文本域的快捷键，enter和ctrl+enter为发送，alt+enter为换行
	$("textarea").keydown(function(event) {
		if(event.altKey && event.keyCode == 13){
			e = $(this).val();
			$(this).val(e + '\n');
		}else if (event.ctrlKey && event.keyCode == 13){
			event.returnValue = false;
			sendTextMessage();
			return false;
		}else if (event.keyCode == 13){
			event.returnValue = false;
			sendTextMessage();
			return false;
		}
	});
	//在密码输入框时的回车登录
	$('#password').keypress(function(event) {
		var key = event.which;
		if(key == 13) {
			login();
		}
	});
});

/**
 * 扩展方法
 */
Array.prototype.remove = function(value) {
	var _index = this.indexOf(value);
	if (_index >= 0) {
		this.splice(_index, 1);
	}
};

String.prototype.replaceAll = function(target, replacement) {
	  return this.split(target).join(replacement);
};